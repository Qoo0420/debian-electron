Index: chromium-102.0.5005.61/components/update_client/update_query_params.cc
===================================================================
--- chromium-102.0.5005.61.orig/src/components/update_client/update_query_params.cc
+++ chromium-102.0.5005.61/src/components/update_client/update_query_params.cc
@@ -63,6 +63,8 @@ const char kArch[] =
     "loong32";
 #elif defined(__loongarch64)
     "loong64";
+#elif defined(__riscv) && __riscv_xlen == 64
+    "riscv64";
 #else
 #error "unknown arch"
 #endif
@@ -138,6 +140,8 @@ const char* UpdateQueryParams::GetNaclAr
   return "loong32";
 #elif defined(ARCH_CPU_LOONG64)
   return "loong64";
+#elif defined(ARCH_CPU_RISCV64)
+  return "riscv64";
 #else
 // NOTE: when adding new values here, please remember to update the
 // comment in the .h file about possible return values from this function.
Index: chromium-102.0.5005.61/components/update_client/update_query_params.h
===================================================================
--- chromium-102.0.5005.61.orig/src/components/update_client/update_query_params.h
+++ chromium-102.0.5005.61/src/components/update_client/update_query_params.h
@@ -44,7 +44,7 @@ class UpdateQueryParams {
   // Returns the value we use for the "nacl_arch" parameter. Note that this may
   // be different from the "arch" parameter above (e.g. one may be 32-bit and
   // the other 64-bit). Possible return values include: "x86-32", "x86-64",
-  // "arm", "mips32", and "ppc64".
+  // "arm", "mips32", "ppc64", and "riscv64".
   static const char* GetNaclArch();
 
   // Returns the current version of Chrome/Chromium.
Index: chromium-102.0.5005.61/skia/BUILD.gn
===================================================================
--- chromium-102.0.5005.61.orig/src/skia/BUILD.gn
+++ chromium-102.0.5005.61/src/skia/BUILD.gn
@@ -809,6 +809,8 @@ skia_source_set("skia_opts") {
     sources = skia_opts.none_sources
   } else if (current_cpu == "s390x") {
     sources = skia_opts.none_sources
+  } else if (current_cpu == "riscv64") {
+    sources = skia_opts.none_sources
   } else {
     assert(false, "Need to port cpu specific stuff from skia_library_opts.gyp")
   }
Index: chromium-102.0.5005.61/third_party/dawn/src/dawn/common/Platform.h
===================================================================
--- chromium-102.0.5005.61.orig/src/third_party/dawn/src/dawn/common/Platform.h
+++ chromium-102.0.5005.61/src/third_party/dawn/src/dawn/common/Platform.h
@@ -68,7 +68,7 @@
 #endif
 
 #if defined(_WIN64) || defined(__aarch64__) || defined(__x86_64__) || defined(__mips64__) || \
-    defined(__s390x__) || defined(__PPC64__)
+    defined(__s390x__) || defined(__PPC64__) || (defined(__riscv) && __riscv_xlen == 64)
 #    define DAWN_PLATFORM_64_BIT 1
 static_assert(sizeof(sizeof(char)) == 8, "Expect sizeof(size_t) == 8");
 #elif defined(_WIN32) || defined(__arm__) || defined(__i386__) || defined(__mips32__) || \
Index: chromium-102.0.5005.61/third_party/highway/src/hwy/base.h
===================================================================
--- chromium-102.0.5005.61.orig/src/third_party/highway/src/hwy/base.h
+++ chromium-102.0.5005.61/src/third_party/highway/src/hwy/base.h
@@ -319,7 +319,7 @@ static constexpr HWY_MAYBE_UNUSED size_t
 #elif HWY_ARCH_RVV
 // Not actually an upper bound on the size, but this value prevents crossing a
 // 4K boundary (relevant on Andes).
-static constexpr HWY_MAYBE_UNUSED size_t kMaxVectorSize = 4096;
+static constexpr HWY_MAYBE_UNUSED size_t kMaxVectorSize = 64;
 #define HWY_ALIGN_MAX alignas(8)  // only elements need be aligned
 #else
 static constexpr HWY_MAYBE_UNUSED size_t kMaxVectorSize = 16;
@@ -333,7 +333,7 @@ static constexpr HWY_MAYBE_UNUSED size_t
 // by concatenating base type and bits.
 
 // RVV already has a builtin type and the GCC intrinsics require it.
-#if HWY_ARCH_RVV && HWY_COMPILER_GCC
+#if HWY_ARCH_RVV && HWY_COMPILER_GCC && 0
 #define HWY_NATIVE_FLOAT16 1
 #else
 #define HWY_NATIVE_FLOAT16 0
Index: chromium-102.0.5005.61/third_party/libaom/BUILD.gn
===================================================================
--- chromium-102.0.5005.61.orig/src/third_party/libaom/BUILD.gn
+++ chromium-102.0.5005.61/src/third_party/libaom/BUILD.gn
@@ -36,6 +36,8 @@ if (current_cpu == "x86") {
   } else {
     cpu_arch_full = "arm"
   }
+} else if (current_cpu == "riscv64") {
+  cpu_arch_full = "generic"
 } else {
   cpu_arch_full = current_cpu
 }
Index: chromium-102.0.5005.61/third_party/libvpx/BUILD.gn
===================================================================
--- chromium-102.0.5005.61.orig/src/third_party/libvpx/BUILD.gn
+++ chromium-102.0.5005.61/src/third_party/libvpx/BUILD.gn
@@ -35,6 +35,8 @@ if (current_cpu == "x86") {
   } else {
     cpu_arch_full = current_cpu
   }
+} else if (current_cpu == "riscv64") {
+  cpu_arch_full = "generic"
 } else {
   cpu_arch_full = current_cpu
 }
@@ -360,7 +362,7 @@ static_library("libvpx") {
     configs += [ "//build/config/compiler:optimize_max" ]
   }
 
-  if (is_nacl) {
+  if (is_nacl || current_cpu == "riscv64") {
     sources = libvpx_srcs_generic
     public_deps = [ ":libvpx_generic_headers" ]
   } else if (current_cpu == "x86") {
Index: chromium-102.0.5005.61/third_party/webrtc/modules/desktop_capture/differ_block.cc
===================================================================
--- chromium-102.0.5005.61.orig/src/third_party/webrtc/modules/desktop_capture/differ_block.cc
+++ chromium-102.0.5005.61/src/third_party/webrtc/modules/desktop_capture/differ_block.cc
@@ -30,7 +30,7 @@ bool VectorDifference(const uint8_t* ima
   static bool (*diff_proc)(const uint8_t*, const uint8_t*) = nullptr;
 
   if (!diff_proc) {
-#if defined(WEBRTC_ARCH_ARM_FAMILY) || defined(WEBRTC_ARCH_MIPS_FAMILY)
+#if defined(WEBRTC_ARCH_ARM_FAMILY) || defined(WEBRTC_ARCH_MIPS_FAMILY) || defined(WEBRTC_ARCH_RISCV_FAMILY)
     // For ARM and MIPS processors, always use C version.
     // TODO(hclam): Implement a NEON version.
     diff_proc = &VectorDifference_C;
Index: chromium-102.0.5005.61/third_party/webrtc/rtc_base/system/arch.h
===================================================================
--- chromium-102.0.5005.61.orig/src/third_party/webrtc/rtc_base/system/arch.h
+++ chromium-102.0.5005.61/src/third_party/webrtc/rtc_base/system/arch.h
@@ -68,9 +68,11 @@
 #endif
 #define WEBRTC_ARCH_BIG_ENDIAN
 #elif defined(__riscv) && __riscv_xlen == 64
+#define WEBRTC_ARCH_RISCV_FAMILY
 #define WEBRTC_ARCH_64_BITS
 #define WEBRTC_ARCH_LITTLE_ENDIAN
 #elif defined(__riscv) && __riscv_xlen == 32
+#define WEBRTC_ARCH_RISCV_FAMILY
 #define WEBRTC_ARCH_32_BITS
 #define WEBRTC_ARCH_LITTLE_ENDIAN
 #elif defined(__pnacl__)
